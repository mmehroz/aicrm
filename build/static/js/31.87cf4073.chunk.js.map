{"version":3,"sources":["views/app-views/orders/EditOrderList.js","../node_modules/antd/es/tag/CheckableTag.js","../node_modules/antd/es/tag/index.js"],"names":["connect","state","user_id","auth","user","role_id","props","history","match","React","useState","loading","setLoading","data","setData","getEditOrders","a","axios","post","res","console","log","response","message","error","useEffect","columns","title","dataIndex","key","align","render","text","color","record","type","className","icon","size","onClick","push","order_token","order_id","edit","style","justifyContent","lg","bodyStyle","dataSource","rowKey","__rest","s","e","t","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","_a","_classNames","customizePrefixCls","prefixCls","checked","onChange","restProps","getPrefixCls","cls","concat","PresetColorRegex","RegExp","join","PresetStatusColorRegex","ref","children","onClose","closeIcon","_a$closable","closable","_React$useContext","direction","_React$useState","_React$useState2","visible","setVisible","isPresetColor","test","tagStyle","backgroundColor","undefined","presetColor","tagClassName","handleCloseClick","stopPropagation","defaultPrevented","isNeedWave","tagProps","iconNode","kids","tagNode","Tag","displayName","CheckableTag"],"mappings":"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","file":"static/js/31.87cf4073.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Card, Table, Tag, Tooltip, message, Button, Col, Row, Popconfirm, } from 'antd';\r\nimport { EyeOutlined, DeleteOutlined } from '@ant-design/icons';\r\nimport { connect } from 'react-redux';\r\nimport axios from 'axios';\r\n\r\nconst EditOrderList = (props) => {\r\n    let { user_id, history, match, role_id } = props;\r\n    let [loading, setLoading] = React.useState(true);\r\n    let [data, setData] = React.useState([]);\r\n\r\n    const getEditOrders = async () => {\r\n        try {\r\n            let res = await axios.post('/editorderlist', {\r\n                user_id,\r\n                role_id,\r\n            });\r\n            setData(res.data.data)\r\n            setLoading(false);\r\n        } catch (error) {\r\n            setLoading(false);\r\n            console.log(error);\r\n            error.response ?\r\n                message.error(error.response.data)\r\n                :\r\n                message.error(error.message)\r\n        }\r\n    }\r\n\r\n\r\n    React.useEffect(() => {\r\n        getEditOrders();\r\n    }, []);\r\n\r\n    const columns = [\r\n        {\r\n            title: 'Reference No.',\r\n            dataIndex: 'order_token',\r\n            key: 'order_token',\r\n            align: 'center',\r\n            render: text => <span>\r\n                <Tag >\r\n                    {text}\r\n                </Tag>\r\n            </span>,\r\n        },\r\n        {\r\n            title: 'Design Name',\r\n            dataIndex: 'order_designname',\r\n            key: 'order_token',\r\n            align: 'center',\r\n        },\r\n        {\r\n            title: 'Work By',\r\n            dataIndex: 'user_name',\r\n            key: 'user_name',\r\n            align: 'center',\r\n            render: text => {\r\n                return <span>\r\n                    {text || '-'}\r\n                </span>\r\n            },\r\n        },\r\n        {\r\n            title: 'Status',\r\n            dataIndex: 'order_status',\r\n            key: 'order_status',\r\n            align: 'center',\r\n            render: text => {\r\n                let color = '';\r\n                if (text === 'Pending') color = 'geekblue'\r\n                else if (text === 'Assigned') color = 'blue'\r\n                else if (text === 'In Progress') color = 'purple'\r\n                else if (text === 'Completed') color = 'cyan'\r\n                else if (text === 'Back To Agent') color = 'volcano'\r\n                else if (text === 'Agent Fixed') color = 'orange'\r\n                else if (text === 'Back To Manager') color = 'gold'\r\n                else if (text === 'Edit By Client') color = 'red'\r\n                else if (text === 'Assign Edit') color = 'magenta'\r\n                return <span>\r\n                    <Tag color={color} >\r\n                        {text}\r\n                    </Tag>\r\n                </span>\r\n            },\r\n        },\r\n        {\r\n            title: 'Action',\r\n            key: 'action',\r\n            align: 'center',\r\n            render: (text, record) => (\r\n                <div >\r\n                    <Tooltip title=\"Edit\">\r\n                        <Button\r\n                            type=\"primary\"\r\n                            className=\"mr-2\"\r\n                            icon={<EyeOutlined />}\r\n                            size=\"small\"\r\n                            onClick={() => history.push(`/orders/${record.order_token}/${record.order_id}`, { edit: true })}\r\n                        />\r\n                    </Tooltip>\r\n                </div>\r\n            )\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <>\r\n            <Row style={{ justifyContent: 'center' }}>\r\n                <Col lg={22}>\r\n                    <Card bodyStyle={{ 'padding': '0px' }}>\r\n                        <Table\r\n                            columns={columns}\r\n                            dataSource={data}\r\n                            loading={loading}\r\n                            rowKey='order_id'\r\n                        />\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    user_id: state.auth.user.user_id,\r\n    role_id: state.auth.user.role_id,\r\n});\r\n\r\nexport default connect(mapStateToProps)(EditOrderList);","import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { ConfigContext } from '../config-provider';\n\nvar CheckableTag = function CheckableTag(_a) {\n  var _classNames;\n\n  var customizePrefixCls = _a.prefixCls,\n      className = _a.className,\n      checked = _a.checked,\n      onChange = _a.onChange,\n      onClick = _a.onClick,\n      restProps = __rest(_a, [\"prefixCls\", \"className\", \"checked\", \"onChange\", \"onClick\"]);\n\n  var _React$useContext = React.useContext(ConfigContext),\n      getPrefixCls = _React$useContext.getPrefixCls;\n\n  var handleClick = function handleClick(e) {\n    if (onChange) {\n      onChange(!checked);\n    }\n\n    if (onClick) {\n      onClick(e);\n    }\n  };\n\n  var prefixCls = getPrefixCls('tag', customizePrefixCls);\n  var cls = classNames(prefixCls, (_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-checkable\"), true), _defineProperty(_classNames, \"\".concat(prefixCls, \"-checkable-checked\"), checked), _classNames), className);\n  return /*#__PURE__*/React.createElement(\"span\", _extends({}, restProps, {\n    className: cls,\n    onClick: handleClick\n  }));\n};\n\nexport default CheckableTag;","import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport omit from 'omit.js';\nimport CloseOutlined from '@ant-design/icons/CloseOutlined';\nimport CheckableTag from './CheckableTag';\nimport { ConfigContext } from '../config-provider';\nimport { PresetColorTypes, PresetStatusColorTypes } from '../_util/colors';\nimport Wave from '../_util/wave';\nvar PresetColorRegex = new RegExp(\"^(\".concat(PresetColorTypes.join('|'), \")(-inverse)?$\"));\nvar PresetStatusColorRegex = new RegExp(\"^(\".concat(PresetStatusColorTypes.join('|'), \")$\"));\n\nvar InternalTag = function InternalTag(_a, ref) {\n  var _classNames;\n\n  var customizePrefixCls = _a.prefixCls,\n      className = _a.className,\n      style = _a.style,\n      children = _a.children,\n      icon = _a.icon,\n      color = _a.color,\n      onClose = _a.onClose,\n      closeIcon = _a.closeIcon,\n      _a$closable = _a.closable,\n      closable = _a$closable === void 0 ? false : _a$closable,\n      props = __rest(_a, [\"prefixCls\", \"className\", \"style\", \"children\", \"icon\", \"color\", \"onClose\", \"closeIcon\", \"closable\"]);\n\n  var _React$useContext = React.useContext(ConfigContext),\n      getPrefixCls = _React$useContext.getPrefixCls,\n      direction = _React$useContext.direction;\n\n  var _React$useState = React.useState(true),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      visible = _React$useState2[0],\n      setVisible = _React$useState2[1];\n\n  React.useEffect(function () {\n    if ('visible' in props) {\n      setVisible(props.visible);\n    }\n  }, [props.visible]);\n\n  var isPresetColor = function isPresetColor() {\n    if (!color) {\n      return false;\n    }\n\n    return PresetColorRegex.test(color) || PresetStatusColorRegex.test(color);\n  };\n\n  var tagStyle = _extends({\n    backgroundColor: color && !isPresetColor() ? color : undefined\n  }, style);\n\n  var presetColor = isPresetColor();\n  var prefixCls = getPrefixCls('tag', customizePrefixCls);\n  var tagClassName = classNames(prefixCls, (_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-\").concat(color), presetColor), _defineProperty(_classNames, \"\".concat(prefixCls, \"-has-color\"), color && !presetColor), _defineProperty(_classNames, \"\".concat(prefixCls, \"-hidden\"), !visible), _defineProperty(_classNames, \"\".concat(prefixCls, \"-rtl\"), direction === 'rtl'), _classNames), className);\n\n  var handleCloseClick = function handleCloseClick(e) {\n    e.stopPropagation();\n\n    if (onClose) {\n      onClose(e);\n    }\n\n    if (e.defaultPrevented) {\n      return;\n    }\n\n    if (!('visible' in props)) {\n      setVisible(false);\n    }\n  };\n\n  var renderCloseIcon = function renderCloseIcon() {\n    if (closable) {\n      return closeIcon ? /*#__PURE__*/React.createElement(\"span\", {\n        className: \"\".concat(prefixCls, \"-close-icon\"),\n        onClick: handleCloseClick\n      }, closeIcon) : /*#__PURE__*/React.createElement(CloseOutlined, {\n        className: \"\".concat(prefixCls, \"-close-icon\"),\n        onClick: handleCloseClick\n      });\n    }\n\n    return null;\n  };\n\n  var isNeedWave = 'onClick' in props || children && children.type === 'a';\n  var tagProps = omit(props, ['visible']);\n  var iconNode = icon || null;\n  var kids = iconNode ? /*#__PURE__*/React.createElement(React.Fragment, null, iconNode, /*#__PURE__*/React.createElement(\"span\", null, children)) : children;\n  var tagNode = /*#__PURE__*/React.createElement(\"span\", _extends({}, tagProps, {\n    ref: ref,\n    className: tagClassName,\n    style: tagStyle\n  }), kids, renderCloseIcon());\n  return isNeedWave ? /*#__PURE__*/React.createElement(Wave, null, tagNode) : tagNode;\n};\n\nvar Tag = /*#__PURE__*/React.forwardRef(InternalTag);\nTag.displayName = 'Tag';\nTag.CheckableTag = CheckableTag;\nexport default Tag;"],"sourceRoot":""}