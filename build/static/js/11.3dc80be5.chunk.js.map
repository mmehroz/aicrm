{"version":3,"sources":["layouts/inner-app-layout/index.js","views/app-views/chat/index.js","components/shared-components/EllipsisDropdown/index.js","views/app-views/chat/Conversation.js","views/app-views/chat/ChatContent.js","constants/ChartConstant.js","views/app-views/chat/ChatMenu.js","components/shared-components/AvatarStatus/index.js"],"names":["useBreakpoint","Grid","SideContent","props","sideContent","sideContentWidth","border","className","style","width","SideContentMobile","visible","onSideContentClose","placement","closable","onClose","bodyStyle","paddingLeft","paddingRight","InnerAppLayout","mainContent","pageHeader","sideContentGutter","isMobile","utils","getBreakPoint","includes","useState","setVisible","e","MenuOutlined","onClick","Chat","ChatMenu","ChatContent","EllipsisDropdown","overlay","menu","trigger","EllipsisOutlined","defaultProps","Item","key","UserOutlined","AudioMutedOutlined","Divider","DeleteOutlined","Conversation","formRef","React","createRef","chatBodyRef","state","info","msgList","getConversation","currentId","data","ChatData","filter","elm","id","setState","msg","getMsgType","obj","msgType","text","src","alt","Flex","alignItems","FileOutlined","scrollToBottom","current","onSend","values","newMsg","newMsgData","avatar","from","time","setFieldsValue","emptyClick","preventDefault","chatContentHeader","name","chatContentBody","ref","autoHide","map","i","chatContentFooter","onFinish","autoComplete","placeholder","suffix","href","SmileOutlined","PaperClipOutlined","shape","type","size","htmlType","SendOutlined","this","getUserId","prevProps","location","pathname","match","params","parseInt","Component","ConversationEmpty","path","url","component","COLORS","apexLineChartDefaultOption","chart","zoom","enabled","toolbar","show","colors","dataLabels","stroke","curve","lineCap","legend","position","horizontalAlign","offsetY","itemMargin","vertical","tooltipHoverFormatter","val","opts","w","globals","series","seriesIndex","dataPointIndex","xaxis","categories","grid","lines","yaxis","list","setList","useHistory","onChange","query","target","value","item","toLowerCase","prefix","SearchOutlined","unread","openChat","length","AvatarStatus","subTitle","count","backgroundColor","icon","gap","onNameClick","renderAvatar"],"mappings":"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","file":"static/js/11.3dc80be5.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from \"prop-types\";\r\nimport { Grid, Drawer } from \"antd\";\r\nimport utils from 'utils'\r\nimport { MenuOutlined } from '@ant-design/icons';\r\n\r\nconst { useBreakpoint } = Grid;\r\n\r\nconst SideContent = props => {\r\n\tconst { sideContent, sideContentWidth = 250, border } = props\r\n\treturn (\r\n\t\t<div className={`side-content ${border? 'with-border': ''}`} style={{width: `${sideContentWidth}px`}}>\r\n\t\t\t{sideContent}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nconst SideContentMobile = props => {\r\n\tconst { sideContent, visible, onSideContentClose } = props\r\n\treturn (\r\n\t\t<Drawer\r\n\t\t\twidth={320}\r\n\t\t\tplacement=\"left\"\r\n\t\t\tclosable={false}\r\n\t\t\tonClose={onSideContentClose}\r\n\t\t\tvisible={visible}\r\n\t\t\tbodyStyle={{paddingLeft: 0, paddingRight: 0}}\r\n\t\t>\r\n\t\t\t<div className=\"h-100\">\r\n\t\t\t\t{sideContent}\r\n\t\t\t</div>\r\n\t\t</Drawer>\r\n\t)\r\n}\r\n\r\nexport const InnerAppLayout = (props) => {\r\n\tconst { mainContent,\tpageHeader, sideContentGutter = true } = props\r\n\tconst isMobile = !utils.getBreakPoint(useBreakpoint()).includes('lg')\r\n\tconst [visible, setVisible] = useState(false);\r\n\r\n\tconst close = (e) => {\r\n\t\tsetVisible(false)\r\n\t} \r\n\r\n\tconst openSideContentMobile = () => {\r\n\t\tsetVisible(true)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"inner-app-layout\">\r\n\t\t\t{isMobile ? \r\n\t\t\t\t<SideContentMobile \r\n\t\t\t\t\tvisible={visible} \r\n\t\t\t\t\tonSideContentClose={close}\r\n\t\t\t\t\t{...props}\r\n\t\t\t\t/> \r\n\t\t\t\t: \r\n\t\t\t\t<SideContent {...props} />\r\n\t\t\t}\r\n\t\t\t<div className={`main-content ${pageHeader? 'has-page-header' : ''} ${sideContentGutter? 'gutter' : 'no-gutter'}`}>\r\n\t\t\t\t{isMobile ? \r\n\t\t\t\t\t<div className={`font-size-lg mb-3 ${!sideContentGutter ? 'pt-3 px-3' : ''}`}>\r\n\t\t\t\t\t\t<MenuOutlined onClick={() => openSideContentMobile()}/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t:\r\n\t\t\t\t\tnull\r\n\t\t\t\t}\r\n\t\t\t\t{mainContent}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nInnerAppLayout.propTypes = {\r\n\tsideContent: PropTypes.node,\r\n\tmainContent: PropTypes.node,\r\n\tpageHeader: PropTypes.bool,\r\n\tsideContentWidth: PropTypes.number,\r\n\tborder: PropTypes.bool,\r\n\tsideContentGutter: PropTypes.bool\r\n};\r\n\r\nexport default InnerAppLayout\r\n","import React from 'react'\r\nimport InnerAppLayout from 'layouts/inner-app-layout';\r\nimport ChatContent from './ChatContent';\r\nimport ChatMenu from './ChatMenu';\r\n\r\nconst Chat = props => {\r\n\treturn (\r\n\t\t<div className=\"chat\">\r\n\t\t\t<InnerAppLayout \r\n\t\t\t\tsideContent={<ChatMenu {...props}/>}\r\n\t\t\t\tmainContent={<ChatContent {...props}/>}\r\n\t\t\t\tsideContentWidth={450}\r\n\t\t\t\tsideContentGutter={false}\r\n\t\t\t\tborder\r\n\t\t\t/>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Chat\r\n","import React from 'react'\r\nimport { Dropdown, Menu } from 'antd';\r\nimport { EllipsisOutlined } from '@ant-design/icons';\r\nimport PropTypes from 'prop-types'\r\n\r\nconst EllipsisDropdown = props => {\r\n\treturn (\r\n\t\t<Dropdown overlay={props.menu} placement={props.placement} trigger={['click']}>\r\n\t\t\t<div className=\"ellipsis-dropdown\">\r\n\t\t\t\t<EllipsisOutlined />\r\n\t\t\t</div>\r\n\t\t</Dropdown>\r\n\t)\r\n}\r\n\r\nEllipsisDropdown.propTypes = {\r\n\ttrigger: PropTypes.string,\r\n\tplacement: PropTypes.string\r\n}\r\n\r\nEllipsisDropdown.defaultProps = {\r\n\ttrigger: 'click',\r\n\tplacement: 'bottomRight',\r\n\tmenu: <Menu/>\r\n};\r\n\r\nexport default EllipsisDropdown\r\n","import React from 'react'\r\nimport ChatData from \"assets/data/chat.data.json\"\r\nimport { Avatar, Divider, Input, Form, Button, Menu } from 'antd';\r\nimport { \r\n\tFileOutlined, \r\n\tSendOutlined, \r\n\tPaperClipOutlined, \r\n\tSmileOutlined, \r\n\tAudioMutedOutlined,\r\n\tUserOutlined,\r\n\tDeleteOutlined\r\n} from '@ant-design/icons';\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\nimport Flex from 'components/shared-components/Flex';\r\nimport EllipsisDropdown from 'components/shared-components/EllipsisDropdown'\r\n\r\nconst\tmenu = () => (\r\n\t<Menu>\r\n\t\t<Menu.Item key=\"0\">\r\n\t\t\t<UserOutlined />\r\n\t\t\t<span>User Info</span>\r\n\t\t</Menu.Item>\r\n\t\t<Menu.Item key=\"1\">\r\n\t\t\t<AudioMutedOutlined />\r\n\t\t\t<span>Mute Chat</span>\r\n\t\t</Menu.Item>\r\n\t\t<Menu.Divider />\r\n\t\t<Menu.Item key=\"3\">\r\n\t\t\t<DeleteOutlined />\r\n\t\t\t<span>Delete Chat</span>\r\n\t\t</Menu.Item>\r\n\t</Menu>\r\n);\r\n\r\nexport class Conversation extends React.Component {\r\n\tformRef = React.createRef();\r\n\tchatBodyRef = React.createRef()\r\n\r\n\tstate = {\r\n\t\tinfo: {},\r\n\t\tmsgList: [],\r\n\t}\r\n\t\r\n\tcomponentDidMount() {\r\n\t\tthis.getConversation(this.getUserId())\r\n\t}\r\n\r\n\tcomponentDidUpdate(prevProps) {\r\n\t\tif (this.props.location.pathname !== prevProps.location.pathname) {\r\n\t\t\tthis.getConversation(this.getUserId())\t\t\t\r\n\t\t}\r\n\t\tthis.scrollToBottom()\r\n\t}\r\n\t\r\n\tgetUserId() {\r\n\t\tconst { id } = this.props.match.params\r\n\t\treturn parseInt(parseInt(id))\r\n\t}\r\n\t\r\n\r\n\tgetConversation = currentId => {\r\n\t\tconst data = ChatData.filter(elm => elm.id === currentId)\r\n\t\tthis.setState({\r\n\t\t\tinfo: data[0],\r\n\t\t\tmsgList: data[0].msg\r\n\t\t})\t\r\n\t}\r\n\r\n\tgetMsgType = obj => {\r\n\t\tswitch (obj.msgType) {\r\n\t\t\tcase 'text':\r\n\t\t\t\treturn <span>{obj.text}</span>\r\n\t\t\tcase 'image':\r\n\t\t\t\treturn <img src={obj.text} alt={obj.text} />\r\n\t\t\tcase 'file':\r\n\t\t\t\treturn (\r\n\t\t\t\t<Flex alignItems=\"center\" className=\"msg-file\">\r\n\t\t\t\t\t<FileOutlined className=\"font-size-md\"/>\r\n\t\t\t\t\t<span className=\"ml-2 font-weight-semibold text-link pointer\">\r\n\t\t\t\t\t\t<u>{obj.text}</u>\r\n\t\t\t\t\t</span>\r\n\t\t\t\t</Flex>\r\n\t\t\t\t)\r\n\t\t\tdefault:\r\n\t\t\t\treturn null;\r\n\t\t}\r\n\t}\r\n\r\n\tscrollToBottom = () => {\r\n\t\tthis.chatBodyRef.current.scrollToBottom()\r\n\t}\r\n\r\n\tonSend = values => {\r\n\t\tif (values.newMsg) {\r\n\t\t\tconst newMsgData = {\r\n\t\t\t\tavatar: \"\",\r\n\t\t\t\tfrom: \"me\",\r\n\t\t\t\tmsgType: \"text\",\r\n\t\t\t\ttext: values.newMsg,\r\n\t\t\t\ttime: \"\",\r\n\t\t\t}\r\n\t\t\tthis.formRef.current.setFieldsValue({\r\n\t\t\t\tnewMsg: ''\r\n\t\t\t});\r\n\t\t\tthis.setState({\r\n\t\t\t\tmsgList: [...this.state.msgList, newMsgData]\r\n\t\t\t})\r\n\t\t}\r\n\t};\r\n\t\r\n\temptyClick = (e) => {\r\n    e.preventDefault();\r\n\t};\r\n\t\r\n\tchatContentHeader = name => (\r\n\t\t<div className=\"chat-content-header\">\r\n\t\t\t<h4 className=\"mb-0\">{name}</h4>\r\n\t\t\t<div>\r\n\t\t\t\t<EllipsisDropdown menu={menu}/>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n\r\n\tchatContentBody = (props, id) => (\r\n\t\t<div className=\"chat-content-body\">\r\n\t\t\t<Scrollbars ref={this.chatBodyRef} autoHide>\r\n\t\t\t\t{\r\n\t\t\t\t\tprops.map((elm, i) => (\r\n\t\t\t\t\t\t<div \r\n\t\t\t\t\t\t\tkey={`msg-${id}-${i}`} \r\n\t\t\t\t\t\t\tclassName={`msg ${elm.msgType === 'date'? 'datetime' : ''} ${elm.from === 'opposite'? 'msg-recipient' : elm.from === 'me'? 'msg-sent' : ''}`}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\telm.avatar? \r\n\t\t\t\t\t\t\t\t<div className=\"mr-2\">\r\n\t\t\t\t\t\t\t\t\t<Avatar src={elm.avatar} />\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t:\r\n\t\t\t\t\t\t\t\tnull\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\telm.text?\r\n\t\t\t\t\t\t\t\t<div className={`bubble ${!elm.avatar? 'ml-5' : ''}`}>\r\n\t\t\t\t\t\t\t\t\t<div className=\"bubble-wrapper\">\r\n\t\t\t\t\t\t\t\t\t\t{this.getMsgType(elm)}\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t:\r\n\t\t\t\t\t\t\t\tnull\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\telm.msgType === 'date'?\r\n\t\t\t\t\t\t\t\t<Divider>{elm.time}</Divider>\r\n\t\t\t\t\t\t\t\t: \r\n\t\t\t\t\t\t\t\tnull\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t))\r\n\t\t\t\t}\r\n\t\t\t</Scrollbars>\r\n\t\t</div>\r\n\t)\r\n\r\n\tchatContentFooter = () => (\r\n\t\t<div className=\"chat-content-footer\">\r\n\t\t\t<Form name=\"msgInput\" ref={this.formRef} onFinish={this.onSend} className=\"w-100\">\r\n\t\t\t\t<Form.Item name=\"newMsg\" className=\"mb-0\">\r\n\t\t\t\t\t<Input \r\n\t\t\t\t\t\tautoComplete=\"off\" \r\n\t\t\t\t\t\tplaceholder=\"Type a message...\"\r\n\t\t\t\t\t\tsuffix={\r\n\t\t\t\t\t\t\t<div className=\"d-flex align-items-center\">\r\n\t\t\t\t\t\t\t\t<a href=\"/#\"  className=\"text-dark font-size-lg mr-3\" onClick={this.emptyClick}>\r\n\t\t\t\t\t\t\t\t\t<SmileOutlined />\r\n\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t<a href=\"/#\" className=\"text-dark font-size-lg mr-3\" onClick={this.emptyClick}>\r\n\t\t\t\t\t\t\t\t\t<PaperClipOutlined />\r\n\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t<Button shape=\"circle\" type=\"primary\" size=\"small\" onClick={this.onSend} htmlType=\"submit\">\r\n\t\t\t\t\t\t\t\t\t<SendOutlined />\r\n\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Form.Item>\r\n\t\t\t</Form>\r\n\t\t</div>\r\n\t)\r\n\r\n\r\n\trender() {\r\n\t\tconst { id } = this.props.match.params\r\n\t\tconst { info, msgList } = this.state\r\n\t\treturn (\r\n\t\t\t<div className=\"chat-content\">\r\n\t\t\t\t{this.chatContentHeader(info.name)}\r\n\t\t\t\t{this.chatContentBody(msgList, id)}\r\n\t\t\t\t{this.chatContentFooter()}\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\n\r\nexport default Conversation\r\n","import React from 'react'\r\nimport { Route, Switch, } from 'react-router-dom';\r\nimport Conversation from './Conversation';\r\n\r\nconst ConversationEmpty = () => (\r\n  <div className=\"chat-content-empty\">\r\n    <div className=\"text-center\">\r\n      <img src=\"/img/others/img-11.png\" alt=\"Start a Conversation\" />\r\n      <h1 className=\"font-weight-light\">Start a conversation</h1>\r\n    </div>\r\n  </div>\r\n)\r\n\r\nconst ChatContent = ({match}) => {\r\n  return (\r\n    <Switch>\r\n      <Route path={`${match.url}/:id`} component={Conversation} />\r\n      <Route path={`${match.url}`} component={ConversationEmpty} />\r\n    </Switch>\r\n  )\r\n}\r\n\r\nexport default ChatContent\r\n","export const COLOR_1 = '#3e82f7';  // blue\r\nexport const COLOR_2 = '#04d182';  // cyan\r\nexport const COLOR_3 = '#ff6b72';  // volcano\r\nexport const COLOR_4 = '#ffc107';  // gold\r\nexport const COLOR_5 = '#a461d8';  // purple\r\nexport const COLOR_6 = '#fa8c16';  // orange\r\nexport const COLOR_7 = '#17bcff';  // geekblue\r\n\r\nexport const COLOR_1_LIGHT = 'rgba(62, 130, 247, 0.15)';\r\nexport const COLOR_2_LIGHT = 'rgba(4, 209, 130, 0.1)';\r\nexport const COLOR_3_LIGHT = 'rgba(222, 68, 54, 0.1)';\r\nexport const COLOR_4_LIGHT = 'rgba(255, 193, 7, 0.1)';\r\nexport const COLOR_5_LIGHT = 'rgba(139, 75, 157, 0.1)';\r\nexport const COLOR_6_LIGHT = 'rgba(250, 140, 22, .1)';\r\nexport const COLOR_7_LIGHT = 'rgba(23, 188, 255, 0.15)';\r\n\r\nexport const COLORS = [\r\n\tCOLOR_1,\r\n\tCOLOR_2,\r\n\tCOLOR_3,\r\n\tCOLOR_4,\r\n\tCOLOR_5,\r\n\tCOLOR_6,\r\n\tCOLOR_7\r\n]\r\n\r\nexport const COLORS_LIGHT = [\r\n\tCOLOR_1_LIGHT,\r\n\tCOLOR_2_LIGHT,\r\n\tCOLOR_3_LIGHT,\r\n\tCOLOR_4_LIGHT,\r\n\tCOLOR_5_LIGHT,\r\n\tCOLOR_6_LIGHT,\r\n\tCOLOR_7_LIGHT\r\n]\r\n\r\nexport const COLOR_AXES = '#edf2f9';\r\nexport const COLOR_TEXT = '#455560';\r\n\r\nexport const apexLineChartDefaultOption = {\r\n\tchart: {\r\n\t\tzoom: {\r\n\t\t\tenabled: false\r\n\t\t},\r\n\t\ttoolbar: {\r\n\t\t\tshow: false\r\n\t\t}\r\n\t},\r\n\tcolors: [...COLORS],\r\n\tdataLabels: {\r\n\t\tenabled: false\r\n\t},\r\n\tstroke: {\r\n\t\twidth: 3,\r\n\t\tcurve: 'smooth',\r\n\t\tlineCap: 'round'\r\n\t},\r\n\tlegend: {\r\n\t\tposition: 'top',\r\n\t\thorizontalAlign: 'right',\r\n\t\toffsetY: -15,\r\n\t\titemMargin: {\r\n\t\t\tvertical: 20\r\n\t\t},\r\n\t\ttooltipHoverFormatter: function(val, opts) {\r\n\t\t\treturn val + ' - ' + opts.w.globals.series[opts.seriesIndex][opts.dataPointIndex] + ''\r\n\t\t}\r\n\t},\r\n\txaxis: {\r\n\t\tcategories: [],\r\n\t},\r\n\tgrid: {\r\n\t\txaxis: {\r\n\t\t\tlines: {\r\n\t\t\t\tshow: true,\r\n\t\t\t}\r\n\t\t},\r\n\t\t  yaxis: {\r\n\t\t\tlines: {\r\n\t\t\t  show: false,\r\n\t\t\t}\r\n\t\t},\r\n\t}\r\n}\r\n\r\nexport const apexAreaChartDefaultOption = {...apexLineChartDefaultOption}\r\n\r\nexport const apexBarChartDefaultOption = {\r\n\tchart: {\r\n\t\tzoom: {\r\n\t\t\tenabled: false\r\n\t\t},\r\n\t\ttoolbar: {\r\n\t\t\tshow: false\r\n\t\t}\r\n\t},\r\n\tplotOptions: {\r\n\t\tbar: {\r\n\t\t\thorizontal: false,\r\n\t\t\tcolumnWidth: '25px',\r\n\t\t\tstartingShapre: 'rounded',\r\n\t\t\tendingShape: 'rounded'\r\n\t\t},\r\n\t},\r\n\tcolors: [...COLORS],\r\n\tdataLabels: {\r\n\t\tenabled: false\r\n\t},\r\n\tstroke: {\r\n\t\tshow: true,\r\n\t\twidth: 6,\r\n\t\tcurve: 'smooth',\r\n\t\tcolors: ['transparent']\r\n\t},\r\n\tlegend: {\r\n\t\tposition: 'top',\r\n\t\thorizontalAlign: 'right',\r\n\t\toffsetY: -15,\r\n\t\tinverseOrder: true,\r\n\t\titemMargin: {\r\n\t\t\tvertical: 20\r\n\t\t},\r\n\t\ttooltipHoverFormatter: function(val, opts) {\r\n\t\t\treturn val + ' - ' + opts.w.globals.series[opts.seriesIndex][opts.dataPointIndex] + ''\r\n\t\t}\r\n\t},\r\n\txaxis: {\r\n\t\tcategories: [],\r\n\t},\r\n\tfill: {\r\n\t\topacity: 1\r\n\t},\r\n\ttooltip: {\r\n\t\ty: {\r\n\t\t\tformatter: val => (`${val}`)\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport const apexPieChartDefaultOption = {\r\n\tcolors: [...COLORS],\r\n\tplotOptions: {\r\n\t\tpie: {\r\n\t\t\tsize: 50,\r\n\t\t  donut: {\r\n\t\t\t\tlabels: {\r\n\t\t\t\t\tshow: true,\r\n\t\t\t\t\ttotal: {\r\n\t\t\t\t\t\tshow: true,\r\n\t\t\t\t\t\tshowAlways: true,\r\n\t\t\t\t\t\tlabel: '',\r\n\t\t\t\t\t\tfontSize: '18px',\r\n\t\t\t\t\t\tfontFamily: 'Roboto',\r\n\t\t\t\t\t\tfontWeight: 'bold',\r\n\t\t\t\t\t\tcolor: '#1a3353',\r\n\t\t\t\t\t\tformatter: function (w) {\r\n\t\t\t\t\t\t\treturn w.globals.seriesTotals.reduce((a, b) => {\r\n\t\t\t\t\t\t\t\treturn a + b\r\n\t\t\t\t\t\t\t}, 0)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\tsize: '87%'\r\n\t\t  }\r\n\t\t}\r\n\t},\r\n\tlabels: [],\r\n\tdataLabels: {\r\n\t\tenabled: false\r\n\t},\r\n\tlegend: {\r\n\t\tshow: false\r\n\t}\r\n}\r\n\r\nexport const apexSparklineChartDefultOption = {\r\n\tchart: {\r\n\t\ttype: 'line',\r\n\t\tsparkline: {\r\n\t\t\tenabled: true\r\n\t\t}\r\n\t},\r\n\tstroke: {\r\n\t\twidth: 2,\r\n\t\tcurve: 'smooth'\r\n\t},\r\n\ttooltip: {\r\n\t\tfixed: {\r\n\t\t  \tenabled: false\r\n\t\t},\r\n\t\tx: {\r\n\t\t  \tshow: false\r\n\t\t},\r\n\t\ty: {\r\n\t\t\ttitle: {\r\n\t\t\t\tformatter: function (seriesName) {\r\n\t\t\t\t\treturn ''\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tmarker: {\r\n\t\t  show: false\r\n\t\t}\r\n\t}\r\n}","import React, { useState } from 'react'\r\nimport ChatData from \"assets/data/chat.data.json\"\r\nimport { Badge, Input } from 'antd';\r\nimport AvatarStatus from 'components/shared-components/AvatarStatus';\r\nimport { COLOR_1 } from 'constants/ChartConstant';\r\nimport { SearchOutlined } from '@ant-design/icons';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst ChatMenu = ({ match, location }) => {\r\n\tconst [list, setList] = useState(ChatData);\r\n\tlet history = useHistory();\r\n\tconst openChat = id => {\r\n\t\tconst data = list.map(elm => {\r\n\t\t\tif (elm.id === id) {\r\n\t\t\t\telm.unread = 0\r\n\t\t\t}\r\n\t\t\treturn elm\r\n\t\t})\r\n\t\tsetList(data);\r\n\t}\r\n\r\n\tconst searchOnChange = e => {\r\n\t\tconst query = e.target.value;\r\n\t\tconst data = ChatData.filter(item => {\r\n\t\t\treturn query === '' ? item : item.name.toLowerCase().includes(query)\r\n\t\t})\r\n\t\tsetList(data)\r\n\t}\r\n\r\n\tconst id = parseInt(location.pathname.match(/\\/([^/]+)\\/?$/)[1])\r\n\r\n\treturn (\r\n\t\t<div className=\"chat-menu\">\r\n\t\t\t<div className=\"chat-menu-toolbar\">\r\n\t\t\t\t<Input\r\n\t\t\t\t\tplaceholder=\"Search\"\r\n\t\t\t\t\tonChange={searchOnChange}\r\n\t\t\t\t\tprefix={\r\n\t\t\t\t\t\t<SearchOutlined className=\"font-size-lg mr-2\" />\r\n\t\t\t\t\t}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"chat-menu-list\">\r\n\t\t\t\t{\r\n\t\t\t\t\tlist.map((item, i) => (\r\n\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\tkey={`chat-item-${item.id}`}\r\n\t\t\t\t\t\t\tonClick={() => openChat(item.id)}\r\n\t\t\t\t\t\t\tclassName={`chat-menu-list-item ${i === (list.length - 1) ? 'last' : ''} ${item.id === id ? 'selected' : ''}`}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<AvatarStatus src={item.avatar} name={item.name} subTitle={item.msg[item.msg.length - 1].text} />\r\n\t\t\t\t\t\t\t<div className=\"text-right\">\r\n\t\t\t\t\t\t\t\t<div className=\"chat-menu-list-item-time\">{item.time}</div>\r\n\t\t\t\t\t\t\t\t{item.unread === 0 ? <span></span> : <Badge count={item.unread} style={{ backgroundColor: COLOR_1 }} />}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t))\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default ChatMenu\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport { Avatar } from 'antd';\r\n\r\nconst renderAvatar = props => {\r\n\treturn <Avatar {...props} className={`ant-avatar-${props.type}`}>{props.text}</Avatar>;\r\n}\r\n\r\nexport const AvatarStatus = props => {\r\n\tconst { name, suffix, subTitle, id, type, src, icon, size, shape, gap, text, onNameClick } = props\r\n\treturn (\r\n\t\t<div className=\"avatar-status d-flex align-items-center\">\r\n\t\t\t{renderAvatar({icon, src, type, size, shape, gap, text })}\r\n\t\t\t<div className=\"ml-2\">\r\n\t\t\t\t<div>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tonNameClick ? \r\n\t\t\t\t\t\t<div onClick={() => onNameClick({name, subTitle, src, id})} className=\"avatar-status-name clickable\">{name}</div> \r\n\t\t\t\t\t\t:\r\n\t\t\t\t\t\t<div className=\"avatar-status-name\">{name}</div>\r\n\t\t\t\t\t}\r\n\t\t\t\t\t<span>{suffix}</span>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"text-muted avatar-status-subtitle\">{subTitle}</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nAvatarStatus.propTypes = {\r\n\tname: PropTypes.string,\r\n\tsrc: PropTypes.string,\r\n\ttype: PropTypes.string,\r\n\tonNameClick: PropTypes.func\r\n}\r\n\r\n\r\nexport default AvatarStatus;\r\n"],"sourceRoot":""}